plugins {
    id 'groovy'
    id 'java'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'com.gradle.plugin-publish' version '0.12.0'
    id 'org.ysb33r.gradletest' version '2.0'
}

group 'io.jumpco.open'
version '1.5.0'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

pluginBundle {
    website = 'https://open.jumpco.io/projects/kfsm-viz.html'
    vcsUrl = 'https://github.com/open-jumpco/kfsm-viz-plugin'
    plugins {
        kfsmVizPlugin {
            displayName = 'KFSM Visualization plugin'
            description = 'KFSM Visualization plugin for plantuml and asciidoc'
            tags = ['fsm', 'kotlin', 'plantuml', 'asciidoc', 'visualize']
            version = project.version
        }
    }
}

gradlePlugin {
    plugins {
        kfsmVizPlugin {
            id = 'io.jumpco.open.kfsm.viz-plugin'
            implementationClass = 'io.jumpco.open.kfsm.gradle.VizPlugin'
        }
    }
}

gradleTest {
    versions '6.8.3', '6.7.1', '6.6.1', '6.5.1'
    versions '5.4.1', '5.5.1', '5.6.2'

    beforeTest {
        println "  ${it.name}"
    }
}

dependencies {
    compileOnly gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.5.14'
    implementation 'io.jumpco.open:kfsm-viz:1.5.0'
    testCompileOnly localGroovy()
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.assertj:assertj-core:3.6.2'
    testCompileOnly gradleTestKit()
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
}

groovydoc {
    use = true
    groovyClasspath = configurations.compile
    source = sourceSets.main.groovy
    windowTitle = 'KFSM Visualization Gradle Plugin'
    docTitle = "Groovy API for KFSM Visualization Gradle Plugin"
}

task sourcesJar(type:Jar) {
    from fileTree(dir:'src/main/groovy')
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from groovydoc
    archiveClassifier = 'javadoc'
}

artifacts {
    archives jar
    archives javadocJar
}

publishing {
    repositories {
        maven {
            logger.lifecycle("maven:publish:version=$version")
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            url = rootProject.version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username rootProject.ext.find('ossJiraUser') ?: System.getenv('OSS_JIRA_USER')
                password rootProject.ext.find('ossJiraPwd') ?: System.getenv('OSS_JIRA_PWD')
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'kfsm-viz-plugin'
            from components.java
            withoutBuildIdentifier()
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'KFSM Visualization'
                description = 'Visualization library for KFSM finite state-machine definitions'
                url = 'https://open.jumpco.io/projects/kfsm.html'
                licenses {
                    license {
                        name = 'GNU General Public License v3'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'corneil_jumpco'
                        name = 'Corneil @ JumpCO'
                        organization = 'Open JumpCO'
                        organizationUrl = 'https://open.jumpco.io'
                    }
                }

                scm {
                    url = project.vcs
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
